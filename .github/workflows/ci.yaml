name: CI

on: [push, pull_request]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "YARN_CACHE_DIR=$(yarn config get cacheFolder)" >> "$GITHUB_ENV"
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            $YARN_CACHE_DIR
            '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn
      - name: Pack workdir
        run: tar -czf /tmp/workdir.tar.gz .
      - name: Upload workdir
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-${{ github.sha }}
          path: /tmp/workdir.tar.gz

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Download workdir
        uses: actions/download-artifact@v3
        with:
          name: install-${{ github.sha }}
          path: /tmp
      - name: Unpack workdir
        run: tar -xzf /tmp/workdir.tar.gz .
      - name: Run tests
        run: yarn jest

  pack:
    runs-on: ubuntu-latest
    needs: [install, test]
    steps:
      - name: Download workdir
        uses: actions/download-artifact@v3
        with:
          name: install-${{ github.sha }}
          path: /tmp
      - name: Unpack workdir
        run: tar -xzf /tmp/workdir.tar.gz .
      - name: Build packages
        run: yarn pack
      - name: Upload workdir
        uses: actions/upload-artifact@v3
        with:
          name: packages-${{ github.sha }}
          path: "*.tgz"
